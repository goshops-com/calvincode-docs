{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Calvin Code Documentation","text":"<p>Welcome to the official documentation for Calvin Code - the AI-powered platform that creates and maintains complete e-commerce solutions through simple conversation.</p> <ul> <li> <p> Connectors</p> <p>Explore available connectors to integrate external services and databases with your Calvin Code applications.</p> <p> Browse Connectors</p> </li> <li> <p> Getting Started</p> <p>Learn how to set up and start using Calvin Code for your e-commerce projects.</p> <p> Get Started</p> </li> <li> <p> API Reference</p> <p>Complete API documentation for integrating with Calvin Code programmatically.</p> <p> API Docs</p> </li> </ul>"},{"location":"#what-is-calvin-code","title":"What is Calvin Code?","text":"<p>Calvin Code transforms e-commerce development by allowing you to create fully transactional websites and applications simply by describing what you want. No coding required - just conversation with our advanced AI.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Conversational Interface: Describe your e-commerce vision in simple language</li> <li>Fully Transactional: Complete payment processing, inventory management, and order fulfillment</li> <li>Instant Deployment: Go from concept to live store in minutes</li> <li>Custom Code Generation: Every line tailored to your specific needs</li> <li>AI-Powered Design: Beautiful, brand-appropriate designs automatically generated</li> <li>Multi-Platform: Create both web and native mobile applications</li> </ul>"},{"location":"#popular-integrations","title":"Popular Integrations","text":"<p>Our platform supports seamless integration with major e-commerce platforms:</p> <ul> <li>VTEX</li> <li>Shopify  </li> <li>Magento</li> <li>WooCommerce</li> <li>Tienda Nube</li> <li>Fenicio</li> </ul> <p>Ready to revolutionize your e-commerce development? Schedule a personalized demo or explore our connectors documentation to get started.</p>"},{"location":"api/","title":"API Reference","text":"<p>Calvin Code provides programmatic access to AI-powered e-commerce generation through our REST API. While our conversational interface is the primary way to create applications, the API enables integration with existing tools and workflows.</p> <p>API Access</p> <p>The Calvin Code API is currently in beta. Contact us for access and documentation.</p>"},{"location":"api/#overview","title":"Overview","text":"<p>The Calvin Code API allows you to:</p> <ul> <li>Create Projects: Initialize new e-commerce applications programmatically</li> <li>Manage Conversations: Send requirements and receive generated code</li> <li>Deploy Applications: Trigger deployment to various platforms</li> <li>Monitor Status: Check build and deployment progress</li> <li>Access Analytics: Retrieve performance and usage metrics</li> </ul>"},{"location":"api/#authentication","title":"Authentication","text":"<p>All API requests require authentication using API keys:</p> <pre><code>curl -H \"Authorization: Bearer YOUR_API_KEY\" \\\n     -H \"Content-Type: application/json\" \\\n     https://api.calvin.gopersonal.com/v1/projects\n</code></pre>"},{"location":"api/#base-url","title":"Base URL","text":"<pre><code>https://api.calvin.gopersonal.com/v1\n</code></pre>"},{"location":"api/#core-endpoints","title":"Core Endpoints","text":""},{"location":"api/#projects","title":"Projects","text":"<p>Create and manage e-commerce projects:</p> <pre><code>GET    /projects           # List all projects\nPOST   /projects           # Create new project\nGET    /projects/{id}      # Get project details\nPUT    /projects/{id}      # Update project\nDELETE /projects/{id}      # Delete project\n</code></pre>"},{"location":"api/#conversations","title":"Conversations","text":"<p>Manage AI conversations for project development:</p> <pre><code>POST   /projects/{id}/conversations    # Start new conversation\nGET    /projects/{id}/conversations    # List conversations\nPOST   /projects/{id}/messages         # Send message to AI\nGET    /projects/{id}/messages         # Get conversation history\n</code></pre>"},{"location":"api/#deployments","title":"Deployments","text":"<p>Handle application deployment:</p> <pre><code>POST   /projects/{id}/deploy      # Deploy project\nGET    /projects/{id}/deployments # List deployments\nGET    /deployments/{id}          # Get deployment status\nPOST   /deployments/{id}/rollback # Rollback deployment\n</code></pre>"},{"location":"api/#example-requests","title":"Example Requests","text":""},{"location":"api/#create-a-new-project","title":"Create a New Project","text":"<pre><code>POST /v1/projects\n{\n  \"name\": \"My Jewelry Store\",\n  \"description\": \"Handmade jewelry e-commerce platform\",\n  \"type\": \"ecommerce\",\n  \"configuration\": {\n    \"theme\": \"modern\",\n    \"features\": [\"payments\", \"inventory\", \"reviews\"],\n    \"integrations\": [\"stripe\", \"bigquery\"]\n  }\n}\n</code></pre>"},{"location":"api/#send-a-message-to-ai","title":"Send a Message to AI","text":"<pre><code>POST /v1/projects/proj_123/messages\n{\n  \"message\": \"Add a wishlist feature and customer reviews section\",\n  \"context\": {\n    \"current_features\": [\"shopping_cart\", \"payments\"],\n    \"user_preferences\": {\n      \"style\": \"minimalist\",\n      \"colors\": [\"purple\", \"white\"]\n    }\n  }\n}\n</code></pre>"},{"location":"api/#deploy-project","title":"Deploy Project","text":"<pre><code>POST /v1/projects/proj_123/deploy\n{\n  \"environment\": \"production\",\n  \"domain\": \"my-jewelry-store.com\",\n  \"ssl\": true,\n  \"cdn\": true\n}\n</code></pre>"},{"location":"api/#response-format","title":"Response Format","text":"<p>All API responses follow a consistent format:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    // Response data here\n  },\n  \"meta\": {\n    \"timestamp\": \"2024-01-15T10:30:00Z\",\n    \"request_id\": \"req_abc123\",\n    \"version\": \"v1\"\n  }\n}\n</code></pre>"},{"location":"api/#error-responses","title":"Error Responses","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"Invalid project configuration\",\n    \"details\": {\n      \"field\": \"theme\",\n      \"issue\": \"Theme 'invalid-theme' does not exist\"\n    }\n  },\n  \"meta\": {\n    \"timestamp\": \"2024-01-15T10:30:00Z\",\n    \"request_id\": \"req_abc123\"\n  }\n}\n</code></pre>"},{"location":"api/#webhooks","title":"Webhooks","text":"<p>Calvin Code can send webhook notifications for key events:</p>"},{"location":"api/#supported-events","title":"Supported Events","text":"<ul> <li><code>project.created</code> - New project created</li> <li><code>conversation.updated</code> - AI generated new code</li> <li><code>deployment.started</code> - Deployment initiated</li> <li><code>deployment.completed</code> - Deployment finished</li> <li><code>deployment.failed</code> - Deployment encountered errors</li> </ul>"},{"location":"api/#webhook-payload-example","title":"Webhook Payload Example","text":"<pre><code>{\n  \"event\": \"deployment.completed\",\n  \"timestamp\": \"2024-01-15T10:30:00Z\",\n  \"data\": {\n    \"project_id\": \"proj_123\",\n    \"deployment_id\": \"dep_456\",\n    \"environment\": \"production\",\n    \"url\": \"https://my-store.calvin.gopersonal.com\",\n    \"status\": \"success\"\n  }\n}\n</code></pre>"},{"location":"api/#setting-up-webhooks","title":"Setting Up Webhooks","text":"<pre><code>POST /v1/webhooks\n{\n  \"url\": \"https://your-app.com/webhooks/calvin\",\n  \"events\": [\"deployment.completed\", \"project.created\"],\n  \"secret\": \"your-webhook-secret\"\n}\n</code></pre>"},{"location":"api/#rate-limits","title":"Rate Limits","text":"Endpoint Type Rate Limit Project Management 100 requests/hour Conversations 50 messages/hour Deployments 10 requests/hour Webhooks 1000 requests/hour"},{"location":"api/#sdks-and-libraries","title":"SDKs and Libraries","text":""},{"location":"api/#javascriptnodejs","title":"JavaScript/Node.js","text":"<pre><code>npm install @calvin-code/api-client\n</code></pre> <pre><code>import CalvinCode from '@calvin-code/api-client';\n\nconst client = new CalvinCode({\n  apiKey: process.env.CALVIN_API_KEY\n});\n\nconst project = await client.projects.create({\n  name: 'My Store',\n  type: 'ecommerce'\n});\n</code></pre>"},{"location":"api/#python","title":"Python","text":"<pre><code>pip install calvin-code-api\n</code></pre> <pre><code>from calvin_code import CalvinCodeClient\n\nclient = CalvinCodeClient(api_key='your-api-key')\n\nproject = client.projects.create(\n    name='My Store',\n    type='ecommerce'\n)\n</code></pre>"},{"location":"api/#integration-examples","title":"Integration Examples","text":""},{"location":"api/#cicd-pipeline-integration","title":"CI/CD Pipeline Integration","text":"<pre><code># GitHub Actions example\nname: Deploy with Calvin Code\non:\n  push:\n    branches: [main]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Deploy to Calvin Code\n        run: |\n          curl -X POST \\\n            -H \"Authorization: Bearer ${{ secrets.CALVIN_API_KEY }}\" \\\n            -H \"Content-Type: application/json\" \\\n            -d '{\"environment\": \"production\"}' \\\n            https://api.calvin.gopersonal.com/v1/projects/${{ secrets.PROJECT_ID }}/deploy\n</code></pre>"},{"location":"api/#monitoring-integration","title":"Monitoring Integration","text":"<pre><code>// Monitor deployment status\nconst checkDeployment = async (deploymentId) =&gt; {\n  const response = await fetch(`/v1/deployments/${deploymentId}`, {\n    headers: {\n      'Authorization': `Bearer ${apiKey}`\n    }\n  });\n\n  const deployment = await response.json();\n\n  if (deployment.data.status === 'completed') {\n    console.log(`Deployment successful: ${deployment.data.url}`);\n  } else if (deployment.data.status === 'failed') {\n    console.error(`Deployment failed: ${deployment.data.error}`);\n  }\n};\n</code></pre>"},{"location":"api/#getting-started","title":"Getting Started","text":"<ol> <li>Request API Access: Contact us for beta access</li> <li>Get API Keys: Retrieve your authentication credentials</li> <li>Test Integration: Start with our sandbox environment</li> <li>Build Integration: Use our SDKs or direct HTTP calls</li> <li>Go Live: Deploy to production with monitoring</li> </ol> <p>For more information, examples, and support, schedule a technical consultation with our API team.</p>"},{"location":"connectors/","title":"Connectors","text":"<p>Calvin Code connectors enable seamless integration between your AI-generated e-commerce applications and external services, databases, and platforms. These connectors provide the bridge between your conversational requirements and real-world data sources.</p>"},{"location":"connectors/#available-connectors","title":"Available Connectors","text":""},{"location":"connectors/#database-connectors","title":"Database Connectors","text":"<ul> <li> <p> BigQuery</p> <p>Connect to Google Cloud BigQuery for large-scale data analytics and warehousing capabilities.</p> <p> BigQuery Setup</p> </li> </ul>"},{"location":"connectors/#coming-soon","title":"Coming Soon","text":"<p>We're continuously expanding our connector ecosystem. Upcoming connectors include:</p> <ul> <li>PostgreSQL - Direct database connections</li> <li>MySQL - Relational database integration  </li> <li>MongoDB - NoSQL database support</li> <li>Redis - Caching and session management</li> <li>Stripe - Payment processing</li> <li>PayPal - Alternative payment gateway</li> <li>SendGrid - Email delivery service</li> <li>Twilio - SMS and communication APIs</li> <li>AWS S3 - Cloud storage integration</li> <li>Shopify API - E-commerce platform sync</li> </ul>"},{"location":"connectors/#how-connectors-work","title":"How Connectors Work","text":"<p>Calvin Code connectors operate through the Model Context Protocol (MCP), enabling secure and efficient communication between your AI applications and external services.</p>"},{"location":"connectors/#key-benefits","title":"Key Benefits","text":"<ul> <li>Security First: All connections use secure authentication methods</li> <li>Real-time Data: Live connections to your data sources</li> <li>Scalable: Built to handle enterprise-level workloads  </li> <li>Easy Setup: Conversational configuration through Calvin Code</li> <li>Monitoring: Built-in logging and error handling</li> </ul>"},{"location":"connectors/#authentication-methods","title":"Authentication Methods","text":"<p>Connectors support multiple authentication approaches:</p> <ul> <li>Service Account Keys (Google Cloud)</li> <li>OAuth 2.0 (Third-party APIs)</li> <li>API Keys (Simple services)</li> <li>Connection Strings (Databases)</li> </ul>"},{"location":"connectors/#need-a-custom-connector","title":"Need a Custom Connector?","text":"<p>Don't see the connector you need? Calvin Code can generate custom connectors based on your specific requirements. Simply describe the service you want to integrate with, and our AI will create the necessary connection logic.</p> <p>Contact us to discuss custom connector development.</p>"},{"location":"connectors/#getting-help","title":"Getting Help","text":"<ul> <li>Review the specific connector documentation for setup instructions</li> <li>Check our troubleshooting guide for common issues</li> <li>Schedule a demo for hands-on assistance</li> </ul>"},{"location":"connectors/bigquery/","title":"Google Cloud Service Account Setup for BigQuery MCP","text":"<p>This comprehensive guide shows you how to create a Google Cloud service account with the necessary permissions for BigQuery MCP integration, using both the Google Cloud Console UI and command-line tools.</p>"},{"location":"connectors/bigquery/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Prerequisites</li> <li>Method 1: Google Cloud Console (UI)</li> <li>Method 2: Command Line (gcloud CLI)</li> <li>Required Permissions</li> <li>Converting to Base64</li> <li>Troubleshooting</li> </ol>"},{"location":"connectors/bigquery/#prerequisites","title":"Prerequisites","text":"<ul> <li>A Google Cloud Platform account</li> <li>An existing GCP project (or create a new one)</li> <li>Billing enabled on your project</li> <li>Project Owner or Editor permissions, or specific IAM roles:</li> <li><code>roles/iam.serviceAccountAdmin</code></li> <li><code>roles/iam.serviceAccountKeyAdmin</code></li> <li><code>roles/resourcemanager.projectIamAdmin</code></li> </ul>"},{"location":"connectors/bigquery/#method-1-google-cloud-console-ui","title":"Method 1: Google Cloud Console (UI)","text":""},{"location":"connectors/bigquery/#step-1-access-the-google-cloud-console","title":"Step 1: Access the Google Cloud Console","text":"<ol> <li>Go to Google Cloud Console</li> <li>Sign in with your Google account</li> <li>Select your project from the dropdown at the top of the page</li> </ol>"},{"location":"connectors/bigquery/#step-2-enable-required-apis","title":"Step 2: Enable Required APIs","text":"<ol> <li>Navigate to APIs &amp; Services \u2192 Library</li> <li>Search for \"BigQuery API\" and click on it</li> <li>Click Enable if not already enabled</li> <li>Repeat for \"Cloud Resource Manager API\" if creating a new project</li> </ol>"},{"location":"connectors/bigquery/#step-3-create-a-service-account","title":"Step 3: Create a Service Account","text":"<ol> <li>Navigate to IAM &amp; Admin \u2192 Service Accounts</li> <li>Click + CREATE SERVICE ACCOUNT</li> <li>Fill in the service account details:</li> <li>Service account name: <code>bigquery-mcp-service</code></li> <li>Service account ID: <code>bigquery-mcp-service</code> (auto-generated)</li> <li>Description: <code>Service account for BigQuery MCP access</code></li> <li>Click CREATE AND CONTINUE</li> </ol>"},{"location":"connectors/bigquery/#step-4-grant-permissions","title":"Step 4: Grant Permissions","text":"<ol> <li>In the Grant this service account access to project section:</li> <li>Click Select a role</li> <li>Search for \"BigQuery Admin\"</li> <li>Select BigQuery Admin (<code>roles/bigquery.admin</code>)</li> <li>Click CONTINUE</li> <li>Skip the optional \"Grant users access to this service account\" section</li> <li>Click DONE</li> </ol>"},{"location":"connectors/bigquery/#step-5-create-and-download-service-account-key","title":"Step 5: Create and Download Service Account Key","text":"<ol> <li>In the Service Accounts list, find your newly created service account</li> <li>Click on the service account name to open its details</li> <li>Navigate to the KEYS tab</li> <li>Click ADD KEY \u2192 Create new key</li> <li>Select JSON as the key type</li> <li>Click CREATE</li> <li>The JSON key file will automatically download to your computer</li> <li>Important: Store this file securely and never share it publicly</li> </ol>"},{"location":"connectors/bigquery/#step-6-note-your-project-id","title":"Step 6: Note Your Project ID","text":"<ol> <li>In the Google Cloud Console header, note your Project ID</li> <li>You'll need this for the MCP configuration</li> </ol>"},{"location":"connectors/bigquery/#method-2-command-line-gcloud-cli","title":"Method 2: Command Line (gcloud CLI)","text":""},{"location":"connectors/bigquery/#step-1-install-and-setup-gcloud-cli","title":"Step 1: Install and Setup gcloud CLI","text":"<ol> <li>Install the Google Cloud CLI from https://cloud.google.com/sdk/docs/install</li> <li>Authenticate with your Google account:    <pre><code>gcloud auth login\n</code></pre></li> <li>Set your project (replace <code>YOUR_PROJECT_ID</code>):    <pre><code>gcloud config set project YOUR_PROJECT_ID\n</code></pre></li> </ol>"},{"location":"connectors/bigquery/#step-2-enable-required-apis_1","title":"Step 2: Enable Required APIs","text":"<pre><code># Enable BigQuery API\ngcloud services enable bigquery.googleapis.com\n\n# Enable Cloud Resource Manager API (if needed)\ngcloud services enable cloudresourcemanager.googleapis.com\n</code></pre>"},{"location":"connectors/bigquery/#step-3-create-service-account","title":"Step 3: Create Service Account","text":"<pre><code>gcloud iam service-accounts create bigquery-mcp-service \\\n    --display-name=\"BigQuery MCP Service Account\" \\\n    --description=\"Service account for BigQuery MCP access\"\n</code></pre>"},{"location":"connectors/bigquery/#step-4-grant-bigquery-permissions","title":"Step 4: Grant BigQuery Permissions","text":"<pre><code># Get your project ID\nPROJECT_ID=$(gcloud config get-value project)\n\n# Grant BigQuery Admin role to the service account\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n    --member=\"serviceAccount:bigquery-mcp-service@$PROJECT_ID.iam.gserviceaccount.com\" \\\n    --role=\"roles/bigquery.admin\"\n</code></pre>"},{"location":"connectors/bigquery/#step-5-create-and-download-service-account-key_1","title":"Step 5: Create and Download Service Account Key","text":"<pre><code># Create and download the service account key\ngcloud iam service-accounts keys create ./bigquery-service-account.json \\\n    --iam-account=bigquery-mcp-service@$PROJECT_ID.iam.gserviceaccount.com\n\n# Verify the file was created\nls -la bigquery-service-account.json\n</code></pre>"},{"location":"connectors/bigquery/#required-permissions","title":"Required Permissions","text":"<p>The service account needs the following minimum permissions for BigQuery MCP:</p>"},{"location":"connectors/bigquery/#essential-role","title":"Essential Role","text":"<ul> <li>BigQuery Admin (<code>roles/bigquery.admin</code>) - Full access to BigQuery resources</li> </ul>"},{"location":"connectors/bigquery/#alternative-granular-permissions-if-you-prefer-minimal-permissions","title":"Alternative Granular Permissions (if you prefer minimal permissions)","text":"<p>Instead of BigQuery Admin, you can grant these specific permissions: - <code>bigquery.datasets.create</code> - <code>bigquery.datasets.get</code> - <code>bigquery.datasets.getIamPolicy</code> - <code>bigquery.datasets.update</code> - <code>bigquery.jobs.create</code> - <code>bigquery.jobs.get</code> - <code>bigquery.jobs.list</code> - <code>bigquery.tables.create</code> - <code>bigquery.tables.delete</code> - <code>bigquery.tables.get</code> - <code>bigquery.tables.getData</code> - <code>bigquery.tables.list</code> - <code>bigquery.tables.update</code> - <code>bigquery.tables.updateData</code></p>"},{"location":"connectors/bigquery/#to-grant-granular-permissions-via-cli","title":"To grant granular permissions via CLI:","text":"<pre><code># Create a custom role with minimal permissions\ngcloud iam roles create bigqueryMcpRole \\\n    --project=$PROJECT_ID \\\n    --title=\"BigQuery MCP Role\" \\\n    --description=\"Minimal permissions for BigQuery MCP\" \\\n    --permissions=\"bigquery.datasets.create,bigquery.datasets.get,bigquery.datasets.getIamPolicy,bigquery.datasets.update,bigquery.jobs.create,bigquery.jobs.get,bigquery.jobs.list,bigquery.tables.create,bigquery.tables.delete,bigquery.tables.get,bigquery.tables.getData,bigquery.tables.list,bigquery.tables.update,bigquery.tables.updateData\"\n\n# Assign the custom role\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n    --member=\"serviceAccount:bigquery-mcp-service@$PROJECT_ID.iam.gserviceaccount.com\" \\\n    --role=\"projects/$PROJECT_ID/roles/bigqueryMcpRole\"\n</code></pre>"},{"location":"connectors/bigquery/#converting-to-base64","title":"Converting to Base64","text":"<p>For some configurations, you may need to convert your service account JSON to base64 encoding.</p>"},{"location":"connectors/bigquery/#method-1-online-tool","title":"Method 1: Online Tool","text":"<ol> <li>Go to https://www.base64encode.org/</li> <li>Copy the entire contents of your <code>bigquery-service-account.json</code> file</li> <li>Paste it into the text area on the website</li> <li>Click Encode to get the base64 string</li> <li>Copy the resulting base64 string</li> </ol>"},{"location":"connectors/bigquery/#method-2-command-line-macoslinux","title":"Method 2: Command Line (macOS/Linux)","text":"<pre><code># Convert JSON file to base64\nbase64 -i bigquery-service-account.json\n\n# Or save to a file\nbase64 -i bigquery-service-account.json &gt; service-account-base64.txt\n\n# To decode back (for verification)\nbase64 -d service-account-base64.txt &gt; decoded-service-account.json\n</code></pre>"},{"location":"connectors/bigquery/#method-3-command-line-windows","title":"Method 3: Command Line (Windows)","text":"<pre><code># PowerShell method\n[Convert]::ToBase64String([IO.File]::ReadAllBytes(\"bigquery-service-account.json\"))\n\n# Or using certutil\ncertutil -encode bigquery-service-account.json service-account-base64.txt\n</code></pre>"},{"location":"connectors/bigquery/#method-4-python-cross-platform","title":"Method 4: Python (Cross-platform)","text":"<pre><code>import base64\nimport json\n\n# Read and encode the JSON file\nwith open('bigquery-service-account.json', 'rb') as f:\n    encoded = base64.b64encode(f.read()).decode('utf-8')\n    print(encoded)\n</code></pre>"},{"location":"connectors/bigquery/#next-steps-configure-mcp","title":"Next Steps: Configure MCP","text":"<p>Once you have your service account JSON file (and optionally base64 encoded), you can configure the BigQuery MCP:</p> <ol> <li> <p>Download the GenAI toolbox:    <pre><code>curl -O https://storage.googleapis.com/genai-toolbox/v0.13.0/darwin/arm64/toolbox\nchmod +x toolbox\n</code></pre></p> </li> <li> <p>Add the MCP configuration:    <pre><code>claude mcp add-json bigquery-toolbox '{\n  \"command\": \"./toolbox\",\n  \"args\": [\"--prebuilt\", \"bigquery\", \"--stdio\"],\n  \"env\": {\n    \"BIGQUERY_PROJECT\": \"YOUR_PROJECT_ID\",\n    \"GOOGLE_APPLICATION_CREDENTIALS\": \"/path/to/bigquery-service-account.json\"\n  }\n}'\n</code></pre></p> </li> </ol>"},{"location":"connectors/bigquery/#troubleshooting","title":"Troubleshooting","text":""},{"location":"connectors/bigquery/#common-issues","title":"Common Issues","text":"<p>Error: \"Permission denied\" - Ensure your user account has the necessary IAM permissions - Verify the service account has the correct roles assigned - Check that the required APIs are enabled</p> <p>Error: \"Service account not found\" - Verify the service account was created successfully - Check that you're using the correct project ID - Ensure the service account email format is correct</p> <p>Error: \"Invalid key file\" - Verify the JSON file is valid and not corrupted - Check file permissions and ensure it's readable - Make sure the file path in the configuration is correct</p> <p>Error: \"Quota exceeded\" - Check your project's API quotas - Ensure billing is enabled on your project - Verify you haven't exceeded service account limits</p>"},{"location":"connectors/bigquery/#verification-commands","title":"Verification Commands","text":"<pre><code># List service accounts\ngcloud iam service-accounts list\n\n# Check service account permissions\ngcloud projects get-iam-policy $PROJECT_ID \\\n    --flatten=\"bindings[].members\" \\\n    --format=\"table(bindings.role)\" \\\n    --filter=\"bindings.members:bigquery-mcp-service@$PROJECT_ID.iam.gserviceaccount.com\"\n\n# Test BigQuery access\nbq --project_id=$PROJECT_ID ls\n\n# Validate JSON file\ncat bigquery-service-account.json | python -m json.tool\n</code></pre>"},{"location":"connectors/bigquery/#security-best-practices","title":"Security Best Practices","text":"<ol> <li>Store credentials securely: Never commit service account keys to version control</li> <li>Use least privilege: Grant only the minimum permissions needed</li> <li>Rotate keys regularly: Create new keys and delete old ones periodically</li> <li>Monitor usage: Enable audit logging to track service account usage</li> <li>Use short-lived tokens when possible: Consider using Workload Identity Federation for enhanced security</li> </ol>"},{"location":"connectors/bigquery/#support","title":"Support","text":"<p>If you encounter issues: 1. Check the Google Cloud Status page 2. Review the BigQuery documentation 3. Visit the Google Cloud Console support page 4. Check the Claude MCP documentation for configuration issues</p>"},{"location":"getting-started/installation/","title":"Installation &amp; Setup","text":"<p>Get started with Calvin Code and begin creating AI-powered e-commerce solutions through simple conversation.</p>"},{"location":"getting-started/installation/#quick-start","title":"Quick Start","text":"<p>Calvin Code requires no traditional installation - it's a conversational platform that you interact with directly. However, to integrate with various services and databases, you'll need to set up connectors.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<p>Before using Calvin Code connectors, ensure you have:</p> <ul> <li>Access to your target services (Google Cloud, databases, etc.)</li> <li>Appropriate permissions to create service accounts or API keys</li> <li>Claude Code CLI (for MCP connector setup)</li> </ul>"},{"location":"getting-started/installation/#setting-up-claude-code","title":"Setting Up Claude Code","text":"<p>Calvin Code integrations work through the Claude Code CLI and Model Context Protocol (MCP).</p>"},{"location":"getting-started/installation/#1-install-claude-code-cli","title":"1. Install Claude Code CLI","text":"<pre><code># macOS/Linux\ncurl -O https://storage.googleapis.com/genai-toolbox/v0.13.0/darwin/arm64/toolbox\nchmod +x toolbox\n\n# Or use the official Claude Code installation method\n# Visit: https://docs.anthropic.com/en/docs/claude-code\n</code></pre>"},{"location":"getting-started/installation/#2-configure-mcp-connectors","title":"2. Configure MCP Connectors","text":"<p>Add connectors using the Claude Code MCP system:</p> <pre><code># Example: Adding BigQuery connector\nclaude mcp add-json bigquery-toolbox '{\n  \"command\": \"./toolbox\",\n  \"args\": [\"--prebuilt\", \"bigquery\", \"--stdio\"],\n  \"env\": {\n    \"BIGQUERY_PROJECT\": \"your-project-id\",\n    \"GOOGLE_APPLICATION_CREDENTIALS\": \"/path/to/service-account.json\"\n  }\n}'\n</code></pre>"},{"location":"getting-started/installation/#connector-specific-setup","title":"Connector-Specific Setup","text":"<p>Each connector has its own setup requirements:</p>"},{"location":"getting-started/installation/#google-cloud-services-bigquery-etc","title":"Google Cloud Services (BigQuery, etc.)","text":"<ol> <li>Enable APIs in Google Cloud Console</li> <li>Create Service Account with appropriate permissions</li> <li>Download JSON key file</li> <li>Configure environment variables</li> </ol> <p>Detailed setup instructions: BigQuery Connector</p>"},{"location":"getting-started/installation/#database-connectors-postgresql-mysql","title":"Database Connectors (PostgreSQL, MySQL)","text":"<ol> <li>Database credentials and connection information</li> <li>Network access configuration</li> <li>Security settings (SSL, firewall rules)</li> </ol>"},{"location":"getting-started/installation/#api-based-connectors-stripe-sendgrid","title":"API-based Connectors (Stripe, SendGrid)","text":"<ol> <li>API keys from service providers</li> <li>Webhook endpoints configuration (if applicable)</li> <li>Rate limiting considerations</li> </ol>"},{"location":"getting-started/installation/#verification","title":"Verification","text":"<p>Test your setup by starting a conversation with Calvin Code:</p> <pre><code># Start Claude Code\nclaude code\n\n# In the conversation, test connector access\n# Example: \"Show me the tables in my BigQuery dataset\"\n</code></pre>"},{"location":"getting-started/installation/#environment-configuration","title":"Environment Configuration","text":""},{"location":"getting-started/installation/#development-environment","title":"Development Environment","text":"<p>For development, set up a local environment file:</p> <pre><code># .env\nBIGQUERY_PROJECT=your-dev-project\nGOOGLE_APPLICATION_CREDENTIALS=./dev-service-account.json\nDATABASE_URL=postgresql://user:pass@localhost/devdb\n</code></pre>"},{"location":"getting-started/installation/#production-environment","title":"Production Environment","text":"<p>For production deployments:</p> <ul> <li>Use secure secret management</li> <li>Implement proper access controls</li> <li>Configure monitoring and logging</li> <li>Set up backup and disaster recovery</li> </ul>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":"<p>Authentication Errors - Verify service account permissions - Check API key validity - Ensure correct project/account selection</p> <p>Connection Timeouts - Check network connectivity - Verify firewall settings - Review rate limiting policies</p> <p>Permission Denied - Confirm service account roles - Check database user permissions - Verify API access levels</p>"},{"location":"getting-started/installation/#getting-help","title":"Getting Help","text":"<ol> <li>Check connector-specific documentation</li> <li>Review error logs and messages</li> <li>Test with minimal configurations</li> <li>Contact support for complex issues</li> </ol>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>Once your connectors are configured:</p> <ol> <li>Explore the Quick Start Guide</li> <li>Review Connector Documentation</li> <li>Try Example Use Cases</li> </ol> <p>Ready to build your first AI-powered e-commerce solution? Let's get started with the Quick Start Guide!</p>"},{"location":"getting-started/quickstart/","title":"Quick Start Guide","text":"<p>Learn how to create your first AI-powered e-commerce solution with Calvin Code in just a few minutes.</p>"},{"location":"getting-started/quickstart/#your-first-e-commerce-site","title":"Your First E-commerce Site","text":"<p>Calvin Code transforms ideas into fully functional e-commerce platforms through conversation. Here's how to get started:</p>"},{"location":"getting-started/quickstart/#step-1-start-a-conversation","title":"Step 1: Start a Conversation","text":"<p>Begin by describing your e-commerce vision:</p> <p>Example Conversation</p> <p>You: \"I want to create an online store for handmade jewelry. It should have a modern design, support for multiple payment methods, and inventory tracking.\"</p> <p>Calvin Code: \"I'll create a beautiful jewelry e-commerce site for you! Let me set up a modern design with product galleries, shopping cart functionality, payment processing, and inventory management. What's your brand name and preferred color scheme?\"</p>"},{"location":"getting-started/quickstart/#step-2-refine-your-requirements","title":"Step 2: Refine Your Requirements","text":"<p>Calvin Code will ask clarifying questions to understand your needs:</p> <ul> <li>Brand Identity: Colors, fonts, logo placement</li> <li>Product Catalog: Categories, pricing structure, inventory needs  </li> <li>Payment Methods: Stripe, PayPal, credit cards</li> <li>Shipping Options: Local delivery, international shipping</li> <li>Additional Features: Reviews, wishlist, customer accounts</li> </ul>"},{"location":"getting-started/quickstart/#step-3-watch-it-build","title":"Step 3: Watch It Build","text":"<p>Calvin Code generates your complete e-commerce platform:</p> <pre><code>graph LR\n    A[Conversation] --&gt; B[AI Analysis]\n    B --&gt; C[Code Generation]\n    C --&gt; D[Database Setup]\n    D --&gt; E[UI/UX Design]\n    E --&gt; F[Testing]\n    F --&gt; G[Deployment]\n    G --&gt; H[Live Store]</code></pre>"},{"location":"getting-started/quickstart/#step-4-deploy-and-launch","title":"Step 4: Deploy and Launch","text":"<p>Your store is ready to go live:</p> <ul> <li>Preview the generated site</li> <li>Test all functionality </li> <li>Deploy with one click</li> <li>Start selling immediately</li> </ul>"},{"location":"getting-started/quickstart/#common-use-cases","title":"Common Use Cases","text":""},{"location":"getting-started/quickstart/#fashion-apparel-store","title":"Fashion &amp; Apparel Store","text":"<pre><code>\"Create a fashion boutique website with size charts, color variants, \nand seasonal collections. Include customer reviews and a wishlist feature.\"\n</code></pre> <p>Generated Features: - Product variant management (sizes, colors) - Dynamic size charts - Collection organization - Customer review system - Wishlist functionality - Mobile-responsive design</p>"},{"location":"getting-started/quickstart/#digital-product-marketplace","title":"Digital Product Marketplace","text":"<pre><code>\"I need a platform to sell digital courses and ebooks. Include user \naccounts, secure download links, and progress tracking for courses.\"\n</code></pre> <p>Generated Features: - Digital product delivery - User authentication system - Download protection - Course progress tracking - Payment processing - Customer dashboard</p>"},{"location":"getting-started/quickstart/#b2b-wholesale-platform","title":"B2B Wholesale Platform","text":"<pre><code>\"Build a wholesale platform where retailers can place bulk orders \nwith tiered pricing and credit terms.\"\n</code></pre> <p>Generated Features: - Bulk order management - Tiered pricing structure - Credit application system - Order approval workflow - Inventory reservations - B2B-specific checkout</p>"},{"location":"getting-started/quickstart/#advanced-features","title":"Advanced Features","text":""},{"location":"getting-started/quickstart/#data-integration","title":"Data Integration","text":"<p>Connect your store to existing data sources:</p> <pre><code>\"Connect this store to my BigQuery database to sync inventory \nlevels and sales analytics in real-time.\"\n</code></pre> <p>Calvin Code will: - Set up secure database connections - Create real-time sync processes - Build analytics dashboards - Configure automated reporting</p>"},{"location":"getting-started/quickstart/#multi-platform-deployment","title":"Multi-Platform Deployment","text":"<p>Expand to mobile and other channels:</p> <pre><code>\"Also create a mobile app version of this store with push \nnotifications for order updates.\"\n</code></pre> <p>Results: - Native mobile application - Push notification system - Synchronized data across platforms - Unified admin dashboard</p>"},{"location":"getting-started/quickstart/#custom-integrations","title":"Custom Integrations","text":"<p>Connect with your existing tools:</p> <pre><code>\"Integrate this with our existing CRM system and accounting software \nfor automatic order processing and customer management.\"\n</code></pre>"},{"location":"getting-started/quickstart/#best-practices","title":"Best Practices","text":""},{"location":"getting-started/quickstart/#1-be-specific-about-requirements","title":"1. Be Specific About Requirements","text":"<p>\u274c Too Vague: \"I want an online store\"</p> <p>\u2705 Clear Requirements: \"I want an online store for organic skincare products with subscription options, ingredient transparency, and eco-friendly packaging information\"</p>"},{"location":"getting-started/quickstart/#2-mention-your-brand-identity","title":"2. Mention Your Brand Identity","text":"<p>Include details about: - Target audience - Brand personality - Visual preferences - Competitive differentiation</p>"},{"location":"getting-started/quickstart/#3-consider-the-full-customer-journey","title":"3. Consider the Full Customer Journey","text":"<p>Think about: - Product discovery - Purchase process - Order fulfillment - Customer support - Return/refund handling</p>"},{"location":"getting-started/quickstart/#4-plan-for-growth","title":"4. Plan for Growth","text":"<p>Mention scalability needs: - Expected traffic volume - International expansion plans - Additional product categories - Integration requirements</p>"},{"location":"getting-started/quickstart/#example-conversations","title":"Example Conversations","text":""},{"location":"getting-started/quickstart/#subscription-box-service","title":"Subscription Box Service","text":"<pre><code>User: \"Create a monthly subscription box service for coffee lovers. \nInclude different subscription tiers, pause/resume options, and \npersonalization based on taste preferences.\"\n\nCalvin Code Response: \"Perfect! I'll create a subscription-based \ncoffee service with multiple tiers, customer preference profiling, \nand flexible subscription management. Let me set up...\"\n</code></pre> <p>Generated Platform: - Subscription management system - Customer preference questionnaire - Multiple subscription tiers - Billing automation - Shipment tracking - Customer portal for account management</p>"},{"location":"getting-started/quickstart/#marketplace-platform","title":"Marketplace Platform","text":"<pre><code>User: \"Build a marketplace where local artisans can sell their \nhandmade products. Include vendor onboarding, commission tracking, \nand dispute resolution.\"\n\nCalvin Code Response: \"I'll build a multi-vendor marketplace with \nvendor management tools, commission calculation, and built-in \ncommunication systems...\"\n</code></pre> <p>Generated Features: - Multi-vendor architecture - Vendor onboarding workflow - Commission tracking and payouts - Product approval system - Dispute resolution tools - Analytics for vendors and admin</p>"},{"location":"getting-started/quickstart/#next-steps","title":"Next Steps","text":"<p>Once your store is live:</p> <ol> <li>Monitor Performance: Use built-in analytics</li> <li>Gather Feedback: From customers and stakeholders  </li> <li>Iterate and Improve: Request modifications through conversation</li> <li>Scale Operations: Add new features as you grow</li> </ol>"},{"location":"getting-started/quickstart/#need-help","title":"Need Help?","text":"<ul> <li>Documentation: Explore Connectors for integrations</li> <li>Support: Schedule a demo for assistance</li> <li>Community: Join other Calvin Code users for tips and best practices</li> </ul> <p>Ready to create something amazing? Start your conversation with Calvin Code and watch your e-commerce vision come to life!</p>"}]}